/* ==========================================================================
   UTILITES
   ========================================================================== */

@utility text-shadow {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.25);
}

@utility focus-outline {
    outline-width: var(--focus-outline-width);
    outline-offset: var(--focus-outline-offset);
    outline-color: var(--focus-outline-color, currentColor);
    outline-style: var(--focus-outline-style, solid);
    box-shadow: var(--focus-outline-box-shadow);
}

@utility focus-none {
    /* @apply border-0; */
    outline: 0;
    box-shadow: none;
}

@utility selected-outline {
    @apply border-blue;
    outline: 0;
    box-shadow: 0 0 0 2px var(--color-blue);
}

@utility loading {
    text-align: center;
    padding: 20px 0;

    .icon {
        display: block;
        margin-bottom: 5px;
    }

    /* &.loading-basic {
        @apply ltr:text-left rtl:text-right;
        padding: 0;

        .icon {
            display: inline-block;
            margin: -2px 5px 0 0;
            [dir='rtl'] & {
                margin: -2px 0 0 5px;
            }
        }
    } */
}

@utility shadow-hover-lg {
    @apply shadow-lg;
    transition: box-shadow 0.08s ease-in-out;
    &:hover {
        @apply shadow-xl;
    }
}

@utility w-fit-content {
    width: fit-content;
}

@utility break-overflowing-words {
    word-break: break-word;
    overflow-wrap: break-word;
}

@utility saving-overlay {
    @apply absolute inset-0 z-200 flex items-center rounded-sm;
    background: rgba(255, 255, 255, 0.9);

    .dark & {
        @apply bg-dark-600/90;
    }

    .inner {
        @apply mx-auto p-10 text-center;
    }

    i {
        position: relative;
        top: -1px;
        margin-right: 10px;
        [dir='rtl'] & {
            margin-left: 10px;
            margin-right: 0;
        }
    }
}

/* ARCHIECTURAL LINES 
=================================================== */
/* Notes...

    URL example
    -----------
    /cp/collections/create

    What does it do?
    ----------------
    - Add a background image of architectural lines to the element.
    - Target single buttons in any descended footers to add a circular line effect around them.

*/
/* HTML Example...

<div class="content-card bg-architectural-lines"> <-- background lines added to this element
    <footer>
        <button>Create Collection</button> <--- circular line effect added to this descendended button in the footer
    </footer>
</div>

*/
@utility bg-architectural-lines {
    &::before {
        content: '';
        pointer-events: none;
        position: absolute;
        inset: 0;
        background-image: url('../../svg/ui/architectural-lines.svg');
        background-size: 100%;
        /* Reduce the chances of the background circles overlapping the button */
        @media (width < 1300px) {
            background-position-y: 130%;
        }
    }
    footer {
        position: relative;
        &::before {
            content: '';
            pointer-events: none;
            position: absolute;
            border-block-end: 1px solid black;
            opacity: 0.06;
            width: 100vw;
            top: 50%;
            transform: translateY(50%);
        }
        button:only-child {
            position: relative;
            &::before, &::after {
                content: '';
                pointer-events: none;
                position: absolute;
                inset: 0;
                border: 1px solid black;
                opacity: 0.06;
                width: 60%;
                aspect-ratio: 1;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%);
                border-radius: 50%;
            }
            &::before {
                width: 45%;
            }
        }
    }
}

@utility bg-checkerboard {
    --checkerboard-light: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h12v12H0zm12 12h12v12H12z' fill='%23f3f4f6'/%3E%3C/svg%3E");
    --checkerboard-dark: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0h12v12H0zm12 12h12v12H12z' fill='%231f2937'/%3E%3C/svg%3E");

    position: relative;
    background-color: #fff;

    &::before {
        content: '';
        position: absolute;
        inset: 0;
        background-image: var(--checkerboard-light);
        opacity: 0;
        transition: opacity 0.2s ease-in-out;
        pointer-events: none;
    }

    &:hover::before {
        opacity: 1;
    }

    .dark & {
        background-color: var(--color-gray-850);

        &::before {
            background-image: var(--checkerboard-dark);
        }
    }
}

@utility clickable {
    @apply cursor-pointer select-none border bg-linear-to-b from-white to-gray-100 text-gray-800 dark:border-dark-800 dark:from-dark-550 dark:to-dark-600 dark:text-dark-175;

    &:hover {
        @apply border-gray-500 from-white to-gray-200 dark:border-dark-900 dark:from-dark-550 dark:to-dark-700;
    }
}

@utility trim-text-start {
    text-box: trim-start;
    /* =JFG. When we _just_ have an SVG we probably don't want to text trim, for example in a Markdown field with button controls like Bold, Italic, etc. */
    &:has(svg:only-child) {
        display: flex;
    }
}

[v-cloak],
[x-cloak] {
    display: none;
}

@utility max-h-screen-px {
    max-height: calc(100vh - 1px) !important;
}
